swagger: '2.0'
info:
  x-ibm-name: getting-started
  version: 1.0.0
  title: getting-started
schemes:
  - https
host: $(catalog.host)
basePath: /gettingstarted # Must match ingress path in deploy/deployment.yaml
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  clientIdHeader:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
  clientSecretHeader:
    in: header
    name: X-IBM-Client-Secret
    type: apiKey
security:
  - clientIdHeader: []
    clientSecretHeader: []
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  catalogs:
    apic-dev:
      properties:
        runtime-url: $(TARGET_URL)
    sb:
      properties:
        runtime-url: 'http://localhost:4001'
  assembly:
    execute:
      - invoke:
          target-url: 'http://ibm-k8s-dev-pub.spokedev.xyz$(request.path)$(request.search)'
paths:
  '/ready':
    post:
      tags:
        - Ready
      summary: Provides the readiness of the microservice to process requests.
      operationId: Ready
      parameters:
        - name: data
          in: body
          description: Client instance data
          required: true
          schema:
            type: string
            enum: ['tom', 'john']
            description: The numbers of items to return
        - name: data
          in: body
          description: Client instance data
          required: true
          schema:
            description: Model instance data
            $ref: '#/definitions/Client'
        - name: data
          in: body
          description: Client instance data
          required: true
          schema:
            description: Model instance data
            $ref: '#/definitions/Client'
        - name: data
          in: header
          description: Client instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Client'
        - name: data
          in: somewhereElse
          description: Client instance data
          required: true
          schema:
            description: Model instance data
            $ref: '#/definitions/Client'
  '/ping':
    get:
      tags:
        - Ping
      summary: Test the reachability of the microserver.
      operationId: Ping
      responses:
        '200':
          description: Microservice is alive
      deprecated: false
  '/':
    post:
      tags:
        - Ready
      summary: Provides the readiness of the microservice to process requests.
      operationId: Ready
      parameters:
        - in: query
          name: pattern
          required: true
          type: string
          pattern: 'hello, world'
          description: The numbers of items to return
        - in: query
          name: enum
          required: true
          type: string
          enum: [ 'one', 'two' ]
          description: The numbers of items to return
        - in: query
          name: minMax
          required: true
          type: integer
          minimum: 10
          maximum: 20
          description: The numbers of items to return
        - in: query
          name: exclusiveMinMax
          required: true
          type: integer
          exclusiveMinimum: 10
          exclusiveMaximum: 20
          description: The numbers of items to return
        - in: query
          name: multipleOf
          required: true
          type: integer
          multipleOf: 3
          description: The numbers of items to return
        - in: query
          name: length
          required: true
          type: string
          minLength: 3
          maxLength: 5
          description: The numbers of items to return
        - in: query
          name: minMaxItems
          required: true
          type: array
          minItems: 3
          maxItems: 5
          description: The numbers of items to return
        - in: query
          name: uniqueItems
          required: true
          type: array
          uniqueItems: true
          description: The numbers of items to return
        - in: query
          name: minMaxProperties
          required: true
          type: object
          minProperties: 1
          maxProperties: 3
          description: The numbers of items to return
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/client'
        '400':
          description: Success
          schema:
            $ref: '#/definitions/client'
      deprecated: false
  '/dogs/{clientID}':
    post:
      tags:
        - Clients
      summary: Create a new client.
      description: Creates a new client record.
      operationId: Client.create
      parameters: 
        - name: data
          in: body
          description: Client instance data
          required: true
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Client'
        - name: data
          in: body
          description: Client instance data
          required: true
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Client'
      responses:
        '200':
          description: Success
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Client'
  '/clients/{clientID}':
    post:
      tags:
        - Clients
      summary: Create a new client.
      description: Creates a new client record.
      operationId: Client.create
      parameters:
        - in: path
          name: clientID
          required: true
          type: string
          enum: ['tom', 'john']
          description: The numbers of items to return
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              code:
                type: string
        '400':
          description: Bad Request
          schema:
            type: object
            properties:
              message:
                type: string
                title: Bad Request
        '500':
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string
                title: Internal Server Error
        '502':
          description: Bad Gateway
          schema:
            type: object
            properties:
              message:
                type: string
                title: Bad Gateway
  '/clients/{clientID}/notifications':
    post:
      tags:
        - Clients
      summary: Create a new client.
      description: Creates a new client record.
      operationId: Client.create
      parameters:
        - in: query
          name: limit
          required: true
          type: integer
          description: The numbers of items to return
        - name: data
          in: body
          description: Client instance data
          required: true
          schema:
            description: Model instance data
            $ref: '#/definitions/Client'
      responses:
        '200':
          description: Success
          schema:
            type: object
            required: 
              - code
            properties:
              code:
                type: string
        '400':
          description: Bad Request
          schema:
            type: object
            properties:
              message:
                type: string
                title: Bad Request
        '500':
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string
                title: Internal Server Error
        '502':
          description: Bad Gateway
          schema:
            type: object
            properties:
              message:
                type: string
                title: Bad Gateway
definitions:
  Client:
    properties:
      name:
        description: The name of the client
        type: string
        minLength: 1
        pattern: ^[a-zA-Z0-9\u00C0-\u017F\u0621-\u064A\u0660-\u0669 .,'\"!?:;&]*$
      description:
        description: Short description of the client
        type: string
    required:
      - name
    additionalProperties: false
